<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.mining.dao.mapper.IssueMapper">
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
	<resultMap id="BaseResultMap" type="com.hust.mining.model.Issue">
		<id column="issue_id" jdbcType="VARCHAR" property="issueId" />
		<result column="issue_name" jdbcType="VARCHAR" property="issueName" />
		<result column="issue_type" jdbcType="VARCHAR" property="issueType" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="creator" jdbcType="VARCHAR" property="creator" />
		<result column="last_operator" jdbcType="VARCHAR" property="lastOperator" />
		<result column="last_update_time" jdbcType="TIMESTAMP"
			property="lastUpdateTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		issue_id, issue_name, issue_type, create_time, creator, last_operator,
		last_update_time
	</sql>
	<select id="selectByExample" parameterType="com.hust.mining.model.IssueExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from issue
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select 'true' as QUERYID,
		<include refid="Base_Column_List" />
		from issue
		where issue_id = #{issueId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from issue
		where issue_id = #{issueId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.hust.mining.model.IssueExample">
		delete from issue
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hust.mining.model.Issue">
		insert into issue (issue_id, issue_name, issue_type,
		create_time, creator, last_operator,
		last_update_time)
		values (#{issueId,jdbcType=VARCHAR}, #{issueName,jdbcType=VARCHAR},
		#{issueType,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{lastOperator,jdbcType=VARCHAR},
		#{lastUpdateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.hust.mining.model.Issue">
		insert into issue
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="issueId != null">
				issue_id,
			</if>
			<if test="issueName != null">
				issue_name,
			</if>
			<if test="issueType != null">
				issue_type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="lastOperator != null">
				last_operator,
			</if>
			<if test="lastUpdateTime != null">
				last_update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="issueId != null">
				#{issueId,jdbcType=VARCHAR},
			</if>
			<if test="issueName != null">
				#{issueName,jdbcType=VARCHAR},
			</if>
			<if test="issueType != null">
				#{issueType,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="lastOperator != null">
				#{lastOperator,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateTime != null">
				#{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hust.mining.model.IssueExample"
		resultType="java.lang.Long">
		select count(*) from issue
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update issue
		<set>
			<if test="record.issueId != null">
				issue_id = #{record.issueId,jdbcType=VARCHAR},
			</if>
			<if test="record.issueName != null">
				issue_name = #{record.issueName,jdbcType=VARCHAR},
			</if>
			<if test="record.issueType != null">
				issue_type = #{record.issueType,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.creator != null">
				creator = #{record.creator,jdbcType=VARCHAR},
			</if>
			<if test="record.lastOperator != null">
				last_operator = #{record.lastOperator,jdbcType=VARCHAR},
			</if>
			<if test="record.lastUpdateTime != null">
				last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update issue
		set issue_id = #{record.issueId,jdbcType=VARCHAR},
		issue_name = #{record.issueName,jdbcType=VARCHAR},
		issue_type = #{record.issueType,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		creator = #{record.creator,jdbcType=VARCHAR},
		last_operator = #{record.lastOperator,jdbcType=VARCHAR},
		last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hust.mining.model.Issue">
		update issue
		<set>
			<if test="issueName != null">
				issue_name = #{issueName,jdbcType=VARCHAR},
			</if>
			<if test="issueType != null">
				issue_type = #{issueType,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="lastOperator != null">
				last_operator = #{lastOperator,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateTime != null">
				last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where issue_id = #{issueId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hust.mining.model.Issue">
		update issue
		set issue_name = #{issueName,jdbcType=VARCHAR},
		issue_type = #{issueType,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		creator = #{creator,jdbcType=VARCHAR},
		last_operator = #{lastOperator,jdbcType=VARCHAR},
		last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
		where issue_id = #{issueId,jdbcType=VARCHAR}
	</update>
</mapper>